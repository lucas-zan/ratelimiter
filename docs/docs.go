// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/check_rate_limit": {
            "post": {
                "description": "Check if the current request is allowed based on rate limiting rules",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rate-limit"
                ],
                "summary": "Check rate limit status",
                "parameters": [
                    {
                        "description": "Rate limit check request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CheckReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.CheckResp"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/rule_stats": {
            "get": {
                "description": "Get monitoring statistics for a specific rate limiting key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "monitoring"
                ],
                "summary": "Get specific rule statistics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Rate limiting key",
                        "name": "key",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Missing required parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/stats": {
            "get": {
                "description": "Get comprehensive monitoring statistics for all rate limiting rules",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "monitoring"
                ],
                "summary": "Get all monitoring statistics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.StatsResp"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/update_rule": {
            "post": {
                "description": "Update or create a new rate limiting rule for the specified API key and model",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rate-limit"
                ],
                "summary": "Update rate limiting rule",
                "parameters": [
                    {
                        "description": "Rate limiting rule update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UpdateRuleReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.UpdateRuleResp"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.CheckReq": {
            "type": "object",
            "required": [
                "key"
            ],
            "properties": {
                "key": {
                    "description": "Rate limiting key (user-defined format)",
                    "type": "string",
                    "example": "your_api_key:gpt-4"
                }
            }
        },
        "handler.CheckResp": {
            "type": "object",
            "properties": {
                "allowed": {
                    "description": "Whether the request is allowed",
                    "type": "boolean",
                    "example": true
                },
                "message": {
                    "description": "Error message (if any)",
                    "type": "string",
                    "example": ""
                },
                "remain": {
                    "description": "Number of remaining tokens",
                    "type": "integer",
                    "example": 45
                }
            }
        },
        "handler.StatsResp": {
            "type": "object",
            "properties": {
                "rules": {
                    "description": "Rate limiting rules",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "additionalProperties": true
                    }
                },
                "stats": {
                    "description": "Statistics for each rule",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "additionalProperties": true
                    }
                }
            }
        },
        "handler.UpdateRuleReq": {
            "type": "object",
            "required": [
                "key",
                "rate_limit"
            ],
            "properties": {
                "burst": {
                    "description": "Bucket capacity, optional",
                    "type": "integer",
                    "example": 50
                },
                "key": {
                    "description": "Rate limiting key (user-defined format)",
                    "type": "string",
                    "example": "your_api_key:gpt-4"
                },
                "rate_limit": {
                    "description": "Tokens per second",
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "handler.UpdateRuleResp": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Response message",
                    "type": "string",
                    "example": "Rule updated"
                },
                "status": {
                    "description": "Status of the operation",
                    "type": "string",
                    "example": "success"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "API key for authentication",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Rate Limiter Service API",
	Description:      "A rate limiting service based on Go and Redis, supporting token bucket algorithm with flexible rate limiting rule configuration and monitoring capabilities.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
